name: Build hello-world application

on:
  push:
    paths:
      - 'hello-world/**'
      - '!hello-world/README.md'
      - '.github/workflows/hello-world.yaml'
jobs:
  build:
    runs-on: ubuntu-latest
    env:   
      EXREPO: acap-computer-vision-examples-sandbox
      EXNAME: hello-world    
      EXDIR: acap/examples/$EXNAME 
    strategy:
      matrix:
        include:
          - arch: aarch64
          # - arch: armv7hf

    steps: 
      - uses: actions/checkout@v2
      - name: Loop for spending time.
        run: | 
          for i in {1..5}; do
              sleep 1
              echo $i
          done

      - name: run for test
        run: |
          export ARCH=aarch64
          export APP_NAME=hello-world
          ls env
          docker build --tag ${{env.EXNAME}} --build-arg ${{ matrix.arch }} .

      #     ok=$(curl -v -s --noproxy - '*' --anyauth -u root:"pass" -k --header "Content-Type: application/json" --request POST --data '{"apiVersion":"1.0", "method":"getAllProperties"}' http://172.25.65.98:2375/axis-cgi/basicdeviceinfo.cgi)
      #     echo  "response from curl= $ok" 
      #     ok=${ok#*Architecture}
      #     echo "test=$(echo $ok | cut -d '"' -f 3)" >> $GITHUB_ENV
      #     echo ok=$(echo $ok | cut -d '"' -f 3) >> $GITHUB_ENV


      # - name: build sync between Ubuntu latest and the camera.
      #   env:
      #     DEVICE_IP: "172.25.65.98"
      #     DEVICE_PASSWORD: 'pass'
      #   run: |
      #     curl -v -s --anyauth -u root:"$DEVICE_PASSWORD" "http://$DEVICE_IP/axis-cgi/param.cgi?action=update&root.Network.SSH.Enabled=yes" 
        # ssh -V root@$DEVICE_IP 'command -v containerd >/dev/null 2>&1 && echo Compatible with Docker ACAP || echo Not compatible with Docker ACAP' | echo "$DEVICE_PASSWORD"

        # docker run --rm axisecp/docker-acap:latest-${{ matrix.arch }} $DEVICE_IP $DEVICE_PASSWORD install
        # curl -s --anyauth -u "root:$DEVICE_PASSWORD" "http://$DEVICE_IP/axis-cgi/param.cgi?action=update&root.dockerdwrapper.UseTLS=yes"


        # cd hello-world/tls-certs
        # scp ca.pem server-cert.pem server-key.pem root@$DEVICE_IP:/usr/local/packages/dockerdwrapper/



    # steps:
    #   - uses: actions/checkout@v2
    #   - uses: docker/setup-buildx-action@v2
    #     with:
    #       install: true
      # - name: can i reach the camera
      #   run: |
      #     ping 172.25.65.98
      # - name: Get the architecture from the camera
      #   run: |
      #     ok=$(curl -v -s --noproxy '*' --anyauth -u root:"pass" -k --header "Content-Type: application/json" --request POST --data '{"apiVersion":"1.0", "method":"getProperties", "params": {"propertyList": ["Architecture"]}}' http://172.25.65.98/axis-cgi/basicdeviceinfo.cgi)
      #     echo  "response from curl= $ok" 
      #     ok=${ok#*Architecture}
      #     echo "test=$(echo $ok | cut -d '"' -f 3)" >> $GITHUB_ENV
      #     echo ok=$(echo $ok | cut -d '"' -f 3)

      # - name: Test the env variable  
      #   id: InfoId
      #   run: | 
      #     echo $test 

      # - name: Build ${{ env.example }} application
      #   env:
      #     example: ${{ env.EXNAME }}
      #     imagetag: ${{ env.EXREPO }}_${{ env.EXNAME }}:1.0
      #   run: |
      #     cd $EXNAME
      #     docker build --no-cache --build-arg ARCH=${{ matrix.arch }} --tag $imagetag .
      

      


        